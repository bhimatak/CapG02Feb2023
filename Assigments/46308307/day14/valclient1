==8369== Memcheck, a memory error detector
==8369== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8369== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==8369== Command: ./a.out
==8369== Parent PID: 7632
==8369== 
--8369-- 
--8369-- Valgrind options:
--8369--    -v
--8369--    --tool=memcheck
--8369--    --leak-check=full
--8369--    --show-reachable=yes
--8369--    --log-file=valclient1
--8369-- Contents of /proc/version:
--8369--   Linux version 5.4.0-1089-azure (buildd@lcy02-amd64-011) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #94~18.04.1-Ubuntu SMP Fri Aug 5 12:34:50 UTC 2022
--8369-- 
--8369-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--8369-- Page sizes: currently 4096, max supported 4096
--8369-- Valgrind library directory: /usr/lib/valgrind
--8369-- Reading syms from /home1/trainee59/classwork/CapG02Feb2023/Assigments/46308307/day14/a.out
--8369-- Reading syms from /lib/x86_64-linux-gnu/ld-2.27.so
--8369--   Considering /lib/x86_64-linux-gnu/ld-2.27.so ..
--8369--   .. CRC mismatch (computed 385b96e8 wanted 9d917e0b)
--8369--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.27.so ..
--8369--   .. CRC is valid
--8369-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--8369--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--8369--   .. CRC mismatch (computed 41ddb025 wanted 9972f546)
--8369--    object doesn't have a symbol table
--8369--    object doesn't have a dynamic symbol table
--8369-- Scheduler: using generic scheduler lock implementation.
--8369-- Reading suppressions file: /usr/lib/valgrind/default.supp
==8369== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-8369-by-trainee59-on-???
==8369== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-8369-by-trainee59-on-???
==8369== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-8369-by-trainee59-on-???
==8369== 
==8369== TO CONTROL THIS PROCESS USING vgdb (which you probably
==8369== don't want to do, unless you know exactly what you're doing,
==8369== or are doing some strange experiment):
==8369==   /usr/lib/valgrind/../../bin/vgdb --pid=8369 ...command...
==8369== 
==8369== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==8369==   /path/to/gdb ./a.out
==8369== and then give GDB the following command
==8369==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=8369
==8369== --pid is optional if only one valgrind process is running
==8369== 
--8369-- REDIR: 0x4020d20 (ld-linux-x86-64.so.2:strlen) redirected to 0x580608c1 (???)
--8369-- REDIR: 0x4020b00 (ld-linux-x86-64.so.2:index) redirected to 0x580608db (???)
--8369-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--8369--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--8369--   .. CRC mismatch (computed 50df1b30 wanted 4800a4cf)
--8369--    object doesn't have a symbol table
--8369-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--8369--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--8369--   .. CRC mismatch (computed f893b962 wanted 95ee359e)
--8369--    object doesn't have a symbol table
==8369== WARNING: new redirection conflicts with existing -- ignoring it
--8369--     old: 0x04020d20 (strlen              ) R-> (0000.0) 0x580608c1 ???
--8369--     new: 0x04020d20 (strlen              ) R-> (2007.0) 0x04c34db0 strlen
--8369-- REDIR: 0x401d540 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c35ee0 (strcmp)
--8369-- REDIR: 0x4021260 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c394f0 (mempcpy)
--8369-- Reading syms from /lib/x86_64-linux-gnu/libc-2.27.so
--8369--   Considering /lib/x86_64-linux-gnu/libc-2.27.so ..
--8369--   .. CRC mismatch (computed 8c0be908 wanted 7c906570)
--8369--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so ..
--8369--   .. CRC is valid
--8369-- REDIR: 0x4edca50 (libc.so.6:memmove) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edbd60 (libc.so.6:strncpy) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edcd30 (libc.so.6:strcasecmp) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edb7b0 (libc.so.6:strcat) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edbd90 (libc.so.6:rindex) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4ede480 (libc.so.6:rawmemchr) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edcbc0 (libc.so.6:mempcpy) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edc9f0 (libc.so.6:bcmp) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edbd20 (libc.so.6:strncmp) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edb820 (libc.so.6:strcmp) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edcb20 (libc.so.6:memset) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4ef9db0 (libc.so.6:wcschr) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edbcc0 (libc.so.6:strnlen) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edb890 (libc.so.6:strcspn) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edcd80 (libc.so.6:strncasecmp) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edb860 (libc.so.6:strcpy) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edcec0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edbdc0 (libc.so.6:strpbrk) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edb7e0 (libc.so.6:index) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edbc90 (libc.so.6:strlen) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4ee6380 (libc.so.6:memrchr) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edcdd0 (libc.so.6:strcasecmp_l) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edc9c0 (libc.so.6:memchr) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4efab70 (libc.so.6:wcslen) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edc070 (libc.so.6:strspn) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edcd00 (libc.so.6:stpncpy) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edccd0 (libc.so.6:stpcpy) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4ede4b0 (libc.so.6:strchrnul) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4edce20 (libc.so.6:strncasecmp_l) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--8369-- REDIR: 0x4fcc280 (libc.so.6:__strrchr_avx2) redirected to 0x4c34730 (rindex)
--8369-- REDIR: 0x4ed5020 (libc.so.6:malloc) redirected to 0x4c31aa0 (malloc)
--8369-- REDIR: 0x4fcc090 (libc.so.6:__strchrnul_avx2) redirected to 0x4c39020 (strchrnul)
--8369-- REDIR: 0x4fcc970 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c39130 (mempcpy)
--8369-- REDIR: 0x4fcc450 (libc.so.6:__strlen_avx2) redirected to 0x4c34cf0 (strlen)
--8369-- REDIR: 0x4fc82e0 (libc.so.6:__memchr_avx2) redirected to 0x4c35f80 (memchr)
--8369-- REDIR: 0x4fcc990 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c386e0 (memmove)
--8369-- REDIR: 0x4ed5910 (libc.so.6:free) redirected to 0x4c32cd0 (free)
==8369== 
==8369== HEAP SUMMARY:
==8369==     in use at exit: 0 bytes in 0 blocks
==8369==   total heap usage: 3 allocs, 3 frees, 5,156 bytes allocated
==8369== 
==8369== All heap blocks were freed -- no leaks are possible
==8369== 
==8369== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==8369== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
